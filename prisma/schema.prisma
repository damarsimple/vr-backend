// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String?
  phone     String?
  avatar    String?
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  proposals Proposal[]
  favorites Favorite[]
}

model Proposal {
  id      Int    @id @default(autoincrement())
  title   String
  content String

  latitude  Float
  longitude Float

  images String[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  author    User     @relation(fields: [authorId], references: [id])
  authorId  Int
}

model Favorite {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  userId    Int

  placeId Int
  Place   Place @relation(fields: [placeId], references: [id])
}

enum MediaKind {
  YOUTUBE
  LOCAL
}

enum MediaType {
  VIDEO
  AUDIO
}

model Place {
  id        Int        @id @default(autoincrement())
  name      String
  address   String
  latitude  Float
  longitude Float
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  medias    Media[]
  events    Event[]
  favorites Favorite[]
}

model Event {
  id        Int      @id @default(autoincrement())
  name      String
  address   String
  latitude  Float
  longitude Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  place   Place @relation(fields: [placeId], references: [id])
  placeId Int

  medias MediaEvent[]
}

model Media {
  id        Int      @id @default(autoincrement())
  url       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  place   Place @relation(fields: [placeId], references: [id])
  placeId Int

  thumbnailUrl String?

  index Int @default(0)

  isVr Boolean @default(true)

  type MediaType @default(VIDEO)
  kind MediaKind @default(YOUTUBE)
}

model MediaEvent {
  id        Int      @id @default(autoincrement())
  url       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  event   Event @relation(fields: [eventId], references: [id])
  eventId Int

  thumbnailUrl String?

  index Int @default(0)

  isVr Boolean @default(true)

  type MediaType @default(VIDEO)
  kind MediaKind @default(YOUTUBE)
}
